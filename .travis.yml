language: c

os:
  - linux

# Only trigger builds on master
branches:
  only:
  - master # Build all commits and PR's on master

# Cache ARM toolchain
cache:
  directories:
    - "$HOME/cache"

# Build matrix
env:
  global:
    - ARM_TOOLS_URL=https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2
    - ARM_TOOLS_DIR=gcc-arm-none-eabi-8-2019-q3-update
    - ARM_TOOLS_PATH=$HOME/cache
  matrix:
    - APP=test-blinky  TARGET=nucleo
    - APP=test-blinky  TARGET=arm
    - APP=test-blinky  TARGET=science
    - APP=test-blinky  TARGET=safety
    - APP=test-blinky  TARGET=gimbal
    - APP=arm          TARGET=arm
    - APP=science      TARGET=science
    - APP=safety       TARGET=safety
    - APP=gimbal       TARGET=gimbal

# Install tools needed by build
install:
  - ls -la $ARM_TOOLS_PATH
  - mkdir -p $ARM_TOOLS_PATH
  - if [ ! -f "$ARM_TOOLS_PATH/$ARM_TOOLS_DIR" ]; then wget $ARM_TOOLS_URL -O /tmp/arm-tools.tar.gz && tar -xvf /tmp/arm-tools.tar.gz -C $ARM_TOOLS_PATH; fi
  - ls -la $ARM_TOOLS_PATH/$ARM_TOOLS_DIR/bin/
  - export PATH=$PATH:$ARM_TOOLS_PATH/$ARM_TOOLS_DIR/bin/

# Print toolchain versions
before_script:
  - arm-none-eabi-gcc --version
  - make --version
  - pwd
  - ls -la

# Build with matrix
script:
  - make APP=$APP TARGET=$TARGET -j4

# Log diagnostic info
after_script:
  - du -sh build/$APP/*
  - make clean-all